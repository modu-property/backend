version: '3.7'
services:
  django:
    image: django
    container_name: django_production
    build:
      context: .
      dockerfile: dockerfile-production-window
    restart: always
    env_file: env/.env.production.window
    ports:
      - "9999:9999"
    command:
      - sh
      - -c
      - |
        envsubst < ./manticore/production/manticore.conf.production.template > ./manticore/production/manticore.conf
        gunicorn modu_property.wsgi:application --bind 0.0.0.0:9999 --workers 1 --threads 1
    volumes:
      - .:/modu_property/
      - /var/run/docker.sock:/var/run/docker.sock  # django container에서 manticore container에 indexer 실행하기 위해 설정함
    extra_hosts:
      - "host.docker.internal:host-gateway"

  manticore:
    container_name: manticore_production
    image: manticoresearch/manticore
    environment:
      - EXTRA=1
    env_file: env/.env.production.window
    restart: always
    ports:
      - 127.0.0.1:9307:9307
      - 127.0.0.1:9309:9309
    ulimits:
      nproc: 65535
      nofile:
         soft: 65535
         hard: 65535
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./manticore/production/data:/var/lib/manticore
      - ./manticore/production/manticore.conf:/etc/manticoresearch/manticore.conf
      - ./manticore/production/log:/var/log/manticore
      - ./manticore/production/index:/var/index/manticore
    depends_on:
      - django
    extra_hosts:
      - "host.docker.internal:host-gateway"


  nginx:
    container_name: core_web_production
    restart: on-failure
    image: nginx:stable
    volumes:
      - ./nginx/nginx.production.window.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/log:/var/log/nginx
    ports:
      - "88:88"
    depends_on:
      - django
    extra_hosts:
      - "host.docker.internal:host-gateway"

  celery_worker:
    container_name: celery_worker_production
    image: django
    restart: always
    volumes:
      - .:/var/www/modu_property/worker
    command:
      - sh
      - -c
      - celery -A modu_property worker -l INFO --concurrency 1 -E
      - tail -f /dev/null
    depends_on:
      - django
      - redis
    env_file: env/.env.production.window
    extra_hosts:
      - "host.docker.internal:host-gateway"

  celery_beat:
    container_name: celery_beat_production
    image: django
    restart: always
    volumes:
      - .:/var/www/modu_property/beat
    command:
      - sh
      - -c
      - celery -A modu_property beat -l INFO
      - tail -f /dev/null
    depends_on:
      - django
      - redis
      - celery_worker
    env_file: env/.env.production.window
    extra_hosts:
      - "host.docker.internal:host-gateway"

  flower:
    container_name: celery_flower_production
    image: mher/flower
    env_file: env/.env.production.window
    ports:
      - 6666:6666
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - celery_beat

  redis:
    container_name: redis_production
    restart: unless-stopped
    image: redis:7.0.5-alpine
    ports:
      - 63799:63799
    extra_hosts:
      - "host.docker.internal:host-gateway"