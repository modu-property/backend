name: Django CI

on: [pull_request, push] # activates the workflow when there is a push or pull request in the repo
jobs:
  test_project:
    runs-on: ubuntu-latest # operating system your code will run on
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: pip install flake8
      - run: pip install -r requirements.txt # install all our dependencies for the project
#      - run: pytest . # run pytest test
      - run: flake8 . # run flake8 test

#on:
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]
#
#jobs:
#  test:
#
#    runs-on: ubuntu-latest
#    strategy:
#      max-parallel: 4
#      matrix:
#        python-version: [3.8]
##    services:
##      postgres:
##        image: postgres:12
##        env:
##          POSTGRES_USER: postgres
##          POSTGRES_PASSWORD: postgres
##          POSTGRES_DB: coredb
##        ports:
##          - 5432:5432
##        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@v2
#      with:
#        python-version: ${{ matrix.python-version }}
##    - name: psycopg2 prerequisites
##      run: sudo apt-get install python3-capstone libpq-dev
#    - name: Install Dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install -r requirements.txt
#    - name: Set Env
#      env:
#        SERVER_ENV: "test"
##        DEBUG: ${{secrets.SECRET_KEY}}
##        SECRET_KEY: ${{secrets.SECRET_KEY}}
##        DB_ENGINE: ${{secrets.DB_ENGINE}}
##        DB_NAME: ${{secrets.DB_NAME}}
##        USER: ${{secrets.USER}}
##        PASSWORD: ${{secrets.PASSWORD}}
##        POSTGRES_USER: ${{secrets.POSTGRES_USER}}
##        POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
##        POSTGRES_DB: ${{secrets.POSTGRES_DB}}
##        HOST: ${{secrets.HOST}}
##        PORT: ${{secrets.PORT}}
##        CELERY_BROKER_URL: ${{secrets.CELERY_BROKER_URL}}
##        LOG_LEVEL: ${{secrets.LOG_LEVEL}}
##        NAVER_NEW_API_CLIENT_ID: ${{secrets.NAVER_NEW_API_CLIENT_ID}}
##        NAVER_NEW_API_CLIENT_SECRET: ${{secrets.NAVER_NEW_API_CLIENT_SECRET}}
##        DJANGO_ALLOWED_HOSTS: ${{secrets.DJANGO_ALLOWED_HOSTS}}
#      run: |
##        python set_env.py
##        echo ${{ env.MY_VAR }}
#    - name: Run Tests
#      run: |
#        pytest .