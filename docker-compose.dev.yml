version: '3.7'
services:
  nginx:
    container_name: core_web
    restart: on-failure
    image: jonasal/nginx-certbot:latest
    volumes:
      - nginx_secrets:/etc/letsencrypt
      - ./nginx/user_conf.d:/etc/nginx/user_conf.d
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - core_app
    env_file:
      - .env.nginx.dev
  core_app:
    container_name: core_app
    build:
      context: .
      dockerfile: ./Dockerfile
    restart: always
    env_file: .env.dev
    ports:
      - "8000:8000"
    command:
      - sh
      - -c
      - |
        python manage.py migrate &&
        gunicorn modu_property.wsgi --bind 0.0.0.0:8000 --workers 1 --threads 1
    volumes:
     - .:/app
     - static_volume:/app/static
    depends_on:
     - db
    links:
      - db
      - redis_broker
    environment:
      - POSTGRES_DB=modu_property
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  db:
    container_name: core_db
    image: postgres:14.6
    ports:
      - '5432:5432'
    env_file: .env.dev
    environment:
      - POSTGRES_DB=modu_property
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./data:/var/lib/postgresql/data/
  celery_worker:
    container_name: celery_worker
    build:
      context: .
      dockerfile: ./Dockerfile
    restart: always
    volumes:
      - .:/var/www/app/worker
    command:
      - sh
      - -c
      - celery -A modu_property worker -l INFO --concurrency 1 -E
      - tail -f /dev/null
    depends_on:
      - core_app
      - redis_broker
    env_file: .env.dev
  celery_beat:
    container_name: celery_beat
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - .:/var/www/app/beat
    command:
      - sh
      - -c
      - celery -A modu_property beat -l INFO
      - tail -f /dev/null
    links:
      - celery_worker
      - redis_broker
    depends_on:
      - core_app
      - redis_broker
      - celery_worker
    env_file: .env.dev
  redis_broker:
    container_name: redis_broker
    restart: unless-stopped
    image: redis:7.0.5-alpine
    expose:
      - 6379

volumes:
  static_volume:
  nginx_secrets:
