version: '3.7'
services:
  django:
    container_name: django
    build:
      context: .
      dockerfile: ./dockerfile-local
    restart: always
    env_file: .env.local
    ports:
      - "8000:8000"
    command:
      - sh
      - -c
      - |
        python manage.py migrate &&
        gunicorn modu_property.wsgi --bind 0.0.0.0:8000 --workers 1 --threads 1
    volumes:
      - .:/modu_property
      - static_volume:/modu_property/static
    environment:
      - POSTGRES_DB=modu_property
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGPORT=5432
    network_mode: "host"
    # extra_hosts:
    #   - "host.docker.internal"
    # networks:
    #   - custom_network
#   nginx:
#     container_name: core_web
#     restart: on-failure
#     image: nginx:stable
#     volumes:
#       - ./nginx/nginx.local.conf:/etc/nginx/conf.d/default.conf
#       - static_volume:/modu_property/static
#     ports:
#       - "80:80"
#     depends_on:
#       - django

  # celery_worker:
  #   container_name: celery_worker
  #   build:
  #     context: .
  #     dockerfile: ./dockerfile-local
  #   restart: always
  #   volumes:
  #     - .:/var/www/modu_property/worker
  #   command:
  #     - sh
  #     - -c
  #     - celery -A modu_property worker -l INFO --concurrency 1 -E
  #     - tail -f /dev/null
  #   depends_on:
  #     - django
  #     - redis_broker
  #   env_file: .env.local
  # celery_beat:
  #   container_name: celery_beat
  #   build:
  #     context: .
  #     dockerfile: ./dockerfile-local
  #   volumes:
  #     - .:/var/www/modu_property/beat
  #   command:
  #     - sh
  #     - -c
  #     - celery -A modu_property beat -l INFO
  #     - tail -f /dev/null
  #   links:
  #     - celery_worker
  #     - redis_broker
  #   depends_on:
  #     - django
  #     - redis_broker
  #     - celery_worker
  #   env_file: .env.local
  # redis_broker:
  #   container_name: redis_broker
  #   restart: unless-stopped
  #   image: redis:7.0.5-alpine
  #   expose:
  #     - 6379
  manticore:
    container_name: manticore
    image: manticoresearch/manticore
    environment:
      - EXTRA=1
    restart: always
    ports:
      - 127.0.0.1:9306:9306
      - 127.0.0.1:9308:9308
    ulimits:
      nproc: 65535
      nofile:
         soft: 65535
         hard: 65535
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./manticore/data:/var/lib/manticore
      - ./manticore/manticore.conf:/etc/manticoresearch/manticore.conf
      - ./manticore/log:/var/log/manticore
      - ./manticore/index:/var/index/manticore
    network_mode: "host"
volumes:
  static_volume:
