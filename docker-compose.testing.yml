version: '3.7'
services:
  django:
    container_name: django
    image: django
    build:
      context: .
      dockerfile: ./dockerfile-testing
    restart: always
    env_file: .env.testing
    ports:
      - "8000:8000"
    command:
      - sh
      - -c
      - |
        envsubst < ./manticore/manticore.conf.template > ./manticore/_manticore.conf
        export SERVER_ENV=testing
        gunicorn modu_property.wsgi:application --bind 0.0.0.0:8000 --workers 4 --threads 4
    volumes:
      - .:/modu_property
      - static_volume:/modu_property/static
    network_mode: "host"
    extra_hosts:
      - "nginx:127.0.0.1"

  manticore:
    container_name: manticore
    image: manticoresearch/manticore
    environment:
      - EXTRA=1
    env_file: .env.testing
    restart: always
    ports:
      - 127.0.0.1:9306:9306
      - 127.0.0.1:9308:9308
    ulimits:
      nproc: 65535
      nofile:
         soft: 65535
         hard: 65535
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./manticore/data:/var/lib/manticore
      - ./manticore/_manticore.conf:/etc/manticoresearch/_manticore.conf
      - ./manticore/log:/var/log/manticore
      - ./manticore/index:/var/index/manticore
    network_mode: "host"
    depends_on:
      - django

  nginx:
    container_name: nginx
    restart: on-failure
    image: nginx:stable
    volumes:
      - ./nginx/nginx.testing.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/modu_property/static
    ports:
      - "80:80"
    depends_on:
      - django
    network_mode: "host"

  celery_worker:
    container_name: celery_worker
    image: django
    restart: always
    volumes:
      - .:/var/www/modu_property/worker
    command:
      - sh
      - -c
      - celery -A modu_property worker -l INFO --concurrency 1 -E
      - tail -f /dev/null
    depends_on:
      - django
      - redis_broker
    env_file: .env.testing
    network_mode: "host"
    
  celery_beat:
    container_name: celery_beat
    image: django
    volumes:
      - .:/var/www/modu_property/beat
    command:
      - sh
      - -c
      - celery -A modu_property beat -l INFO
      - tail -f /dev/null
    depends_on:
      - django
      - redis_broker
      - celery_worker
    env_file: .env.testing
    network_mode: "host"

  flower:
    container_name: celery_flower
    image: mher/flower
    env_file: .env.testing
    ports:
      - 5555:5555
    network_mode: "host"
    depends_on:
      - celery_beat

  redis_broker:
    container_name: redis_broker
    restart: unless-stopped
    image: redis:7.0.5-alpine
    expose:
      - 6379
    network_mode: "host"

volumes:
  static_volume:
